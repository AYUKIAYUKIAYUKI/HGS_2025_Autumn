//============================================================================
// 
// オブジェクト、ヘッダーファイル [object.h]
// Author : 福田歩希
// 
//============================================================================

#pragma once

//****************************************************
// 名前空間OBJを定義
//****************************************************
namespace OBJ
{
	/* この場所はメンバに持たせるタイプ分け用のenumなどのみ定義しています */

	//****************************************************
	// 描画優先度指定用の列挙型を定義
	//****************************************************
	enum class LAYER : unsigned char
	{
		BG = 0,  // 背景
		DEFAULT, // 通常
		FRONT,   // 前面
		STENCIL, // ステンシル
		UI,      // UI
		MAX
	};

	//****************************************************
	// タイプ識別用の列挙型を定義
	//****************************************************
	enum class TYPE : unsigned char
	{
		NONE = 0, // 無し
		PLAYER,   // プレイヤー
		MAX
	};
}

//****************************************************
// オブジェクトクラスを定義
//****************************************************
class CObject
{
public:

	//****************************************************
	// special function
	//****************************************************

	// コンストラクタ
	CObject(OBJ::TYPE Type, OBJ::LAYER Layer);

	// デストラクタ
	virtual ~CObject() = default;

	//****************************************************
	// virtual function
	//****************************************************
	virtual void Update() = 0; // 更新処理
	virtual void Draw()   = 0; // 描画処理

	//****************************************************
	// inline function
	//****************************************************

	// タイプの操作用
	inline OBJ::TYPE GetType() const         { return m_Type; }
	inline void      SetType(OBJ::TYPE Type) { m_Type = Type; }

	// 描画優先度の操作用
	inline OBJ::LAYER GetLayer() const           { return m_Layer; }
	inline void       SetLayer(OBJ::LAYER Layer) { m_Layer = Layer; }

	// 死亡フラグの設定
	inline bool GetDeath() const             { return m_bDeath; }
	inline void SetDeath(bool bState = true) { m_bDeath = bState; }

private:

	//****************************************************
	// data
	//****************************************************
	OBJ::TYPE  m_Type;   // オブジェクトタイプ
	OBJ::LAYER m_Layer;  // 描画優先度
	bool       m_bDeath; // 死亡フラグ
};